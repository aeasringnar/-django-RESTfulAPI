# {verbose}ModelViewSet视图
class {model_name}Viewset(ModelViewSet):
    '''
    partial_update:  更新指定ID的{verbose}，局部更新
    create:  创建{verbose}
    retrieve:  检索指定ID的{verbose}
    update:  更新指定ID的{verbose}
    destroy:  删除指定ID的{verbose}
    list:  获取{verbose}列表
    '''
    queryset = {model_name}.objects.all()
    serializer_class = Return{model_name}ModelSerializer
    authentication_classes = (JwtAuthentication, )
    permission_classes = (AllowAny, ) # or IsAuthPermission
    throttle_classes = (VisitThrottle, )
    pagination_class = Pagination
    filter_backends = (DjangoFilterBackend, SearchFilter, OrderingFilter){search_str}{filter_str}
    ordering_fields = ('id', 'create_timestamp', 'update_timestamp', 'sort_timestamp')
    
    def get_serializer_class(self):
        if self.action == 'create':
            return Create{model_name}ModelSerializer
        if self.action in {'update', 'partial_update'}:
            return Update{model_name}ModelSerializer
        return Return{model_name}ModelSerializer

    def get_queryset(self):
        # return {model_name}.objects.all(filter_time=self.request.query_params.get('filter_time')).filter()
        if self.request.auth and self.request.user.group_id == 1:
            return {model_name}.objects.all()
        elif self.request.auth:
            return {model_name}.objects.filter(user_id=self.request.user.id)
        return {model_name}.objects.filter(id=0)